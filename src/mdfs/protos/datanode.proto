syntax = "proto3";

package mdfs.message;
import "mdfs/protos/block_info.proto";

message TransferMessage {
    int32 command = 1; // read or write command defined in mdfs::common::DataTransferCommand
    BlockInfo block = 2;
    bytes data = 3;
}

message TransferReturnMessage {
    int32 status = 1;
    bytes data = 2;
}

// transfer block between datanodes
message DataNodeCommMessage {
    BlockInfo block = 1;
    bytes data = 2;
    int32 command = 3; // read or write command defined in mdfs::common::DataTransferCommand
}

service DataNodeService {
    // between datanode
    // used for data communicate bewteen datanodes, e.g. duplication or checksum
    rpc Communicate (DataNodeCommMessage) returns (DataNodeCommMessage);
    
    // from client to datanode
    // transfer a block between client and datanode
    rpc Transfer (TransferMessage) returns (TransferReturnMessage);
}
