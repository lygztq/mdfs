// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mdfs/protos/namenode.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mdfs/protos/namenode.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mdfs {
namespace message {

namespace {

const ::google::protobuf::Descriptor* ClientCommandMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientCommandMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientCommandReturnMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientCommandReturnMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeartbeatMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeartbeatMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeartbeatReturnMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeartbeatReturnMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReportBlockMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReportBlockMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReportBlockReturnMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReportBlockReturnMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_mdfs_2fprotos_2fnamenode_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_mdfs_2fprotos_2fnamenode_2eproto() {
  protobuf_AddDesc_mdfs_2fprotos_2fnamenode_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mdfs/protos/namenode.proto");
  GOOGLE_CHECK(file != NULL);
  ClientCommandMessage_descriptor_ = file->message_type(0);
  static const int ClientCommandMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCommandMessage, command_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCommandMessage, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCommandMessage, des_address_),
  };
  ClientCommandMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientCommandMessage_descriptor_,
      ClientCommandMessage::internal_default_instance(),
      ClientCommandMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClientCommandMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCommandMessage, _internal_metadata_));
  ClientCommandReturnMessage_descriptor_ = file->message_type(1);
  static const int ClientCommandReturnMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCommandReturnMessage, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCommandReturnMessage, blockinfo_),
  };
  ClientCommandReturnMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientCommandReturnMessage_descriptor_,
      ClientCommandReturnMessage::internal_default_instance(),
      ClientCommandReturnMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClientCommandReturnMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCommandReturnMessage, _internal_metadata_));
  HeartbeatMessage_descriptor_ = file->message_type(2);
  static const int HeartbeatMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatMessage, spaceremain_),
  };
  HeartbeatMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HeartbeatMessage_descriptor_,
      HeartbeatMessage::internal_default_instance(),
      HeartbeatMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(HeartbeatMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatMessage, _internal_metadata_));
  HeartbeatReturnMessage_descriptor_ = file->message_type(3);
  static const int HeartbeatReturnMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatReturnMessage, command_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatReturnMessage, blocks_),
  };
  HeartbeatReturnMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HeartbeatReturnMessage_descriptor_,
      HeartbeatReturnMessage::internal_default_instance(),
      HeartbeatReturnMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(HeartbeatReturnMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatReturnMessage, _internal_metadata_));
  ReportBlockMessage_descriptor_ = file->message_type(4);
  static const int ReportBlockMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportBlockMessage, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportBlockMessage, blockinfo_),
  };
  ReportBlockMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReportBlockMessage_descriptor_,
      ReportBlockMessage::internal_default_instance(),
      ReportBlockMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReportBlockMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportBlockMessage, _internal_metadata_));
  ReportBlockReturnMessage_descriptor_ = file->message_type(5);
  static const int ReportBlockReturnMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportBlockReturnMessage, status_),
  };
  ReportBlockReturnMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReportBlockReturnMessage_descriptor_,
      ReportBlockReturnMessage::internal_default_instance(),
      ReportBlockReturnMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReportBlockReturnMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportBlockReturnMessage, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mdfs_2fprotos_2fnamenode_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientCommandMessage_descriptor_, ClientCommandMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientCommandReturnMessage_descriptor_, ClientCommandReturnMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HeartbeatMessage_descriptor_, HeartbeatMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HeartbeatReturnMessage_descriptor_, HeartbeatReturnMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReportBlockMessage_descriptor_, ReportBlockMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReportBlockReturnMessage_descriptor_, ReportBlockReturnMessage::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mdfs_2fprotos_2fnamenode_2eproto() {
  ClientCommandMessage_default_instance_.Shutdown();
  delete ClientCommandMessage_reflection_;
  ClientCommandReturnMessage_default_instance_.Shutdown();
  delete ClientCommandReturnMessage_reflection_;
  HeartbeatMessage_default_instance_.Shutdown();
  delete HeartbeatMessage_reflection_;
  HeartbeatReturnMessage_default_instance_.Shutdown();
  delete HeartbeatReturnMessage_reflection_;
  ReportBlockMessage_default_instance_.Shutdown();
  delete ReportBlockMessage_reflection_;
  ReportBlockReturnMessage_default_instance_.Shutdown();
  delete ReportBlockReturnMessage_reflection_;
}

void protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::mdfs::message::protobuf_InitDefaults_mdfs_2fprotos_2fblock_5finfo_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ClientCommandMessage_default_instance_.DefaultConstruct();
  ClientCommandReturnMessage_default_instance_.DefaultConstruct();
  HeartbeatMessage_default_instance_.DefaultConstruct();
  HeartbeatReturnMessage_default_instance_.DefaultConstruct();
  ReportBlockMessage_default_instance_.DefaultConstruct();
  ReportBlockReturnMessage_default_instance_.DefaultConstruct();
  ClientCommandMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  ClientCommandReturnMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  HeartbeatMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  HeartbeatReturnMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReportBlockMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReportBlockReturnMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto_once_);
void protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto_once_,
                 &protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto_impl);
}
void protobuf_AddDesc_mdfs_2fprotos_2fnamenode_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032mdfs/protos/namenode.proto\022\014mdfs.messa"
    "ge\032\034mdfs/protos/block_info.proto\"M\n\024Clie"
    "ntCommandMessage\022\017\n\007command\030\001 \001(\005\022\017\n\007add"
    "ress\030\002 \001(\t\022\023\n\013des_address\030\003 \001(\t\"X\n\032Clien"
    "tCommandReturnMessage\022\016\n\006status\030\001 \001(\005\022*\n"
    "\tblockinfo\030\002 \003(\0132\027.mdfs.message.BlockInf"
    "o\"\'\n\020HeartbeatMessage\022\023\n\013spaceRemain\030\001 \001"
    "(\004\"R\n\026HeartbeatReturnMessage\022\017\n\007command\030"
    "\001 \001(\005\022\'\n\006blocks\030\002 \003(\0132\027.mdfs.message.Blo"
    "ckInfo\"P\n\022ReportBlockMessage\022\016\n\006status\030\001"
    " \001(\005\022*\n\tblockinfo\030\002 \001(\0132\027.mdfs.message.B"
    "lockInfo\"*\n\030ReportBlockReturnMessage\022\016\n\006"
    "status\030\001 \001(\0052\234\002\n\017NameNodeService\022]\n\rClie"
    "ntCommand\022\".mdfs.message.ClientCommandMe"
    "ssage\032(.mdfs.message.ClientCommandReturn"
    "Message\022Q\n\tHeartbeat\022\036.mdfs.message.Hear"
    "tbeatMessage\032$.mdfs.message.HeartbeatRet"
    "urnMessage\022W\n\013ReportBlock\022 .mdfs.message"
    ".ReportBlockMessage\032&.mdfs.message.Repor"
    "tBlockReturnMessageb\006proto3", 787);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mdfs/protos/namenode.proto", &protobuf_RegisterTypes);
  ::mdfs::message::protobuf_AddDesc_mdfs_2fprotos_2fblock_5finfo_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mdfs_2fprotos_2fnamenode_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_mdfs_2fprotos_2fnamenode_2eproto_once_);
void protobuf_AddDesc_mdfs_2fprotos_2fnamenode_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_mdfs_2fprotos_2fnamenode_2eproto_once_,
                 &protobuf_AddDesc_mdfs_2fprotos_2fnamenode_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mdfs_2fprotos_2fnamenode_2eproto {
  StaticDescriptorInitializer_mdfs_2fprotos_2fnamenode_2eproto() {
    protobuf_AddDesc_mdfs_2fprotos_2fnamenode_2eproto();
  }
} static_descriptor_initializer_mdfs_2fprotos_2fnamenode_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientCommandMessage::kCommandFieldNumber;
const int ClientCommandMessage::kAddressFieldNumber;
const int ClientCommandMessage::kDesAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientCommandMessage::ClientCommandMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:mdfs.message.ClientCommandMessage)
}

void ClientCommandMessage::InitAsDefaultInstance() {
}

ClientCommandMessage::ClientCommandMessage(const ClientCommandMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mdfs.message.ClientCommandMessage)
}

void ClientCommandMessage::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  des_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_ = 0;
  _cached_size_ = 0;
}

ClientCommandMessage::~ClientCommandMessage() {
  // @@protoc_insertion_point(destructor:mdfs.message.ClientCommandMessage)
  SharedDtor();
}

void ClientCommandMessage::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  des_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientCommandMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientCommandMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientCommandMessage_descriptor_;
}

const ClientCommandMessage& ClientCommandMessage::default_instance() {
  protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientCommandMessage> ClientCommandMessage_default_instance_;

ClientCommandMessage* ClientCommandMessage::New(::google::protobuf::Arena* arena) const {
  ClientCommandMessage* n = new ClientCommandMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientCommandMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mdfs.message.ClientCommandMessage)
  command_ = 0;
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  des_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ClientCommandMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mdfs.message.ClientCommandMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 command = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &command_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_address;
        break;
      }

      // optional string address = 2;
      case 2: {
        if (tag == 18) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mdfs.message.ClientCommandMessage.address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_des_address;
        break;
      }

      // optional string des_address = 3;
      case 3: {
        if (tag == 26) {
         parse_des_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_des_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->des_address().data(), this->des_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mdfs.message.ClientCommandMessage.des_address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mdfs.message.ClientCommandMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mdfs.message.ClientCommandMessage)
  return false;
#undef DO_
}

void ClientCommandMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mdfs.message.ClientCommandMessage)
  // optional int32 command = 1;
  if (this->command() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->command(), output);
  }

  // optional string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mdfs.message.ClientCommandMessage.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->address(), output);
  }

  // optional string des_address = 3;
  if (this->des_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->des_address().data(), this->des_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mdfs.message.ClientCommandMessage.des_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->des_address(), output);
  }

  // @@protoc_insertion_point(serialize_end:mdfs.message.ClientCommandMessage)
}

::google::protobuf::uint8* ClientCommandMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mdfs.message.ClientCommandMessage)
  // optional int32 command = 1;
  if (this->command() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->command(), target);
  }

  // optional string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mdfs.message.ClientCommandMessage.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->address(), target);
  }

  // optional string des_address = 3;
  if (this->des_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->des_address().data(), this->des_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mdfs.message.ClientCommandMessage.des_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->des_address(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mdfs.message.ClientCommandMessage)
  return target;
}

size_t ClientCommandMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mdfs.message.ClientCommandMessage)
  size_t total_size = 0;

  // optional int32 command = 1;
  if (this->command() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->command());
  }

  // optional string address = 2;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // optional string des_address = 3;
  if (this->des_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->des_address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientCommandMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mdfs.message.ClientCommandMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClientCommandMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientCommandMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mdfs.message.ClientCommandMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mdfs.message.ClientCommandMessage)
    UnsafeMergeFrom(*source);
  }
}

void ClientCommandMessage::MergeFrom(const ClientCommandMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mdfs.message.ClientCommandMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClientCommandMessage::UnsafeMergeFrom(const ClientCommandMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.command() != 0) {
    set_command(from.command());
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.des_address().size() > 0) {

    des_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.des_address_);
  }
}

void ClientCommandMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mdfs.message.ClientCommandMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientCommandMessage::CopyFrom(const ClientCommandMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mdfs.message.ClientCommandMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClientCommandMessage::IsInitialized() const {

  return true;
}

void ClientCommandMessage::Swap(ClientCommandMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientCommandMessage::InternalSwap(ClientCommandMessage* other) {
  std::swap(command_, other->command_);
  address_.Swap(&other->address_);
  des_address_.Swap(&other->des_address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientCommandMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientCommandMessage_descriptor_;
  metadata.reflection = ClientCommandMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientCommandMessage

// optional int32 command = 1;
void ClientCommandMessage::clear_command() {
  command_ = 0;
}
::google::protobuf::int32 ClientCommandMessage::command() const {
  // @@protoc_insertion_point(field_get:mdfs.message.ClientCommandMessage.command)
  return command_;
}
void ClientCommandMessage::set_command(::google::protobuf::int32 value) {
  
  command_ = value;
  // @@protoc_insertion_point(field_set:mdfs.message.ClientCommandMessage.command)
}

// optional string address = 2;
void ClientCommandMessage::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientCommandMessage::address() const {
  // @@protoc_insertion_point(field_get:mdfs.message.ClientCommandMessage.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientCommandMessage::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mdfs.message.ClientCommandMessage.address)
}
void ClientCommandMessage::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mdfs.message.ClientCommandMessage.address)
}
void ClientCommandMessage::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mdfs.message.ClientCommandMessage.address)
}
::std::string* ClientCommandMessage::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:mdfs.message.ClientCommandMessage.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientCommandMessage::release_address() {
  // @@protoc_insertion_point(field_release:mdfs.message.ClientCommandMessage.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientCommandMessage::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:mdfs.message.ClientCommandMessage.address)
}

// optional string des_address = 3;
void ClientCommandMessage::clear_des_address() {
  des_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientCommandMessage::des_address() const {
  // @@protoc_insertion_point(field_get:mdfs.message.ClientCommandMessage.des_address)
  return des_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientCommandMessage::set_des_address(const ::std::string& value) {
  
  des_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mdfs.message.ClientCommandMessage.des_address)
}
void ClientCommandMessage::set_des_address(const char* value) {
  
  des_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mdfs.message.ClientCommandMessage.des_address)
}
void ClientCommandMessage::set_des_address(const char* value, size_t size) {
  
  des_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mdfs.message.ClientCommandMessage.des_address)
}
::std::string* ClientCommandMessage::mutable_des_address() {
  
  // @@protoc_insertion_point(field_mutable:mdfs.message.ClientCommandMessage.des_address)
  return des_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientCommandMessage::release_des_address() {
  // @@protoc_insertion_point(field_release:mdfs.message.ClientCommandMessage.des_address)
  
  return des_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientCommandMessage::set_allocated_des_address(::std::string* des_address) {
  if (des_address != NULL) {
    
  } else {
    
  }
  des_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), des_address);
  // @@protoc_insertion_point(field_set_allocated:mdfs.message.ClientCommandMessage.des_address)
}

inline const ClientCommandMessage* ClientCommandMessage::internal_default_instance() {
  return &ClientCommandMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientCommandReturnMessage::kStatusFieldNumber;
const int ClientCommandReturnMessage::kBlockinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientCommandReturnMessage::ClientCommandReturnMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:mdfs.message.ClientCommandReturnMessage)
}

void ClientCommandReturnMessage::InitAsDefaultInstance() {
}

ClientCommandReturnMessage::ClientCommandReturnMessage(const ClientCommandReturnMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mdfs.message.ClientCommandReturnMessage)
}

void ClientCommandReturnMessage::SharedCtor() {
  status_ = 0;
  _cached_size_ = 0;
}

ClientCommandReturnMessage::~ClientCommandReturnMessage() {
  // @@protoc_insertion_point(destructor:mdfs.message.ClientCommandReturnMessage)
  SharedDtor();
}

void ClientCommandReturnMessage::SharedDtor() {
}

void ClientCommandReturnMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientCommandReturnMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientCommandReturnMessage_descriptor_;
}

const ClientCommandReturnMessage& ClientCommandReturnMessage::default_instance() {
  protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientCommandReturnMessage> ClientCommandReturnMessage_default_instance_;

ClientCommandReturnMessage* ClientCommandReturnMessage::New(::google::protobuf::Arena* arena) const {
  ClientCommandReturnMessage* n = new ClientCommandReturnMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientCommandReturnMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mdfs.message.ClientCommandReturnMessage)
  status_ = 0;
  blockinfo_.Clear();
}

bool ClientCommandReturnMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mdfs.message.ClientCommandReturnMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_blockinfo;
        break;
      }

      // repeated .mdfs.message.BlockInfo blockinfo = 2;
      case 2: {
        if (tag == 18) {
         parse_blockinfo:
          DO_(input->IncrementRecursionDepth());
         parse_loop_blockinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_blockinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_blockinfo;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mdfs.message.ClientCommandReturnMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mdfs.message.ClientCommandReturnMessage)
  return false;
#undef DO_
}

void ClientCommandReturnMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mdfs.message.ClientCommandReturnMessage)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // repeated .mdfs.message.BlockInfo blockinfo = 2;
  for (unsigned int i = 0, n = this->blockinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->blockinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:mdfs.message.ClientCommandReturnMessage)
}

::google::protobuf::uint8* ClientCommandReturnMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mdfs.message.ClientCommandReturnMessage)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // repeated .mdfs.message.BlockInfo blockinfo = 2;
  for (unsigned int i = 0, n = this->blockinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->blockinfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mdfs.message.ClientCommandReturnMessage)
  return target;
}

size_t ClientCommandReturnMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mdfs.message.ClientCommandReturnMessage)
  size_t total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // repeated .mdfs.message.BlockInfo blockinfo = 2;
  {
    unsigned int count = this->blockinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->blockinfo(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientCommandReturnMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mdfs.message.ClientCommandReturnMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClientCommandReturnMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientCommandReturnMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mdfs.message.ClientCommandReturnMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mdfs.message.ClientCommandReturnMessage)
    UnsafeMergeFrom(*source);
  }
}

void ClientCommandReturnMessage::MergeFrom(const ClientCommandReturnMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mdfs.message.ClientCommandReturnMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClientCommandReturnMessage::UnsafeMergeFrom(const ClientCommandReturnMessage& from) {
  GOOGLE_DCHECK(&from != this);
  blockinfo_.MergeFrom(from.blockinfo_);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void ClientCommandReturnMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mdfs.message.ClientCommandReturnMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientCommandReturnMessage::CopyFrom(const ClientCommandReturnMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mdfs.message.ClientCommandReturnMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClientCommandReturnMessage::IsInitialized() const {

  return true;
}

void ClientCommandReturnMessage::Swap(ClientCommandReturnMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientCommandReturnMessage::InternalSwap(ClientCommandReturnMessage* other) {
  std::swap(status_, other->status_);
  blockinfo_.UnsafeArenaSwap(&other->blockinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientCommandReturnMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientCommandReturnMessage_descriptor_;
  metadata.reflection = ClientCommandReturnMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientCommandReturnMessage

// optional int32 status = 1;
void ClientCommandReturnMessage::clear_status() {
  status_ = 0;
}
::google::protobuf::int32 ClientCommandReturnMessage::status() const {
  // @@protoc_insertion_point(field_get:mdfs.message.ClientCommandReturnMessage.status)
  return status_;
}
void ClientCommandReturnMessage::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:mdfs.message.ClientCommandReturnMessage.status)
}

// repeated .mdfs.message.BlockInfo blockinfo = 2;
int ClientCommandReturnMessage::blockinfo_size() const {
  return blockinfo_.size();
}
void ClientCommandReturnMessage::clear_blockinfo() {
  blockinfo_.Clear();
}
const ::mdfs::message::BlockInfo& ClientCommandReturnMessage::blockinfo(int index) const {
  // @@protoc_insertion_point(field_get:mdfs.message.ClientCommandReturnMessage.blockinfo)
  return blockinfo_.Get(index);
}
::mdfs::message::BlockInfo* ClientCommandReturnMessage::mutable_blockinfo(int index) {
  // @@protoc_insertion_point(field_mutable:mdfs.message.ClientCommandReturnMessage.blockinfo)
  return blockinfo_.Mutable(index);
}
::mdfs::message::BlockInfo* ClientCommandReturnMessage::add_blockinfo() {
  // @@protoc_insertion_point(field_add:mdfs.message.ClientCommandReturnMessage.blockinfo)
  return blockinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::mdfs::message::BlockInfo >*
ClientCommandReturnMessage::mutable_blockinfo() {
  // @@protoc_insertion_point(field_mutable_list:mdfs.message.ClientCommandReturnMessage.blockinfo)
  return &blockinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::mdfs::message::BlockInfo >&
ClientCommandReturnMessage::blockinfo() const {
  // @@protoc_insertion_point(field_list:mdfs.message.ClientCommandReturnMessage.blockinfo)
  return blockinfo_;
}

inline const ClientCommandReturnMessage* ClientCommandReturnMessage::internal_default_instance() {
  return &ClientCommandReturnMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartbeatMessage::kSpaceRemainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatMessage::HeartbeatMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:mdfs.message.HeartbeatMessage)
}

void HeartbeatMessage::InitAsDefaultInstance() {
}

HeartbeatMessage::HeartbeatMessage(const HeartbeatMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mdfs.message.HeartbeatMessage)
}

void HeartbeatMessage::SharedCtor() {
  spaceremain_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

HeartbeatMessage::~HeartbeatMessage() {
  // @@protoc_insertion_point(destructor:mdfs.message.HeartbeatMessage)
  SharedDtor();
}

void HeartbeatMessage::SharedDtor() {
}

void HeartbeatMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartbeatMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartbeatMessage_descriptor_;
}

const HeartbeatMessage& HeartbeatMessage::default_instance() {
  protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HeartbeatMessage> HeartbeatMessage_default_instance_;

HeartbeatMessage* HeartbeatMessage::New(::google::protobuf::Arena* arena) const {
  HeartbeatMessage* n = new HeartbeatMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartbeatMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mdfs.message.HeartbeatMessage)
  spaceremain_ = GOOGLE_ULONGLONG(0);
}

bool HeartbeatMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mdfs.message.HeartbeatMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 spaceRemain = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &spaceremain_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mdfs.message.HeartbeatMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mdfs.message.HeartbeatMessage)
  return false;
#undef DO_
}

void HeartbeatMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mdfs.message.HeartbeatMessage)
  // optional uint64 spaceRemain = 1;
  if (this->spaceremain() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->spaceremain(), output);
  }

  // @@protoc_insertion_point(serialize_end:mdfs.message.HeartbeatMessage)
}

::google::protobuf::uint8* HeartbeatMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mdfs.message.HeartbeatMessage)
  // optional uint64 spaceRemain = 1;
  if (this->spaceremain() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->spaceremain(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mdfs.message.HeartbeatMessage)
  return target;
}

size_t HeartbeatMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mdfs.message.HeartbeatMessage)
  size_t total_size = 0;

  // optional uint64 spaceRemain = 1;
  if (this->spaceremain() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->spaceremain());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartbeatMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mdfs.message.HeartbeatMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HeartbeatMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mdfs.message.HeartbeatMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mdfs.message.HeartbeatMessage)
    UnsafeMergeFrom(*source);
  }
}

void HeartbeatMessage::MergeFrom(const HeartbeatMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mdfs.message.HeartbeatMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HeartbeatMessage::UnsafeMergeFrom(const HeartbeatMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.spaceremain() != 0) {
    set_spaceremain(from.spaceremain());
  }
}

void HeartbeatMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mdfs.message.HeartbeatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatMessage::CopyFrom(const HeartbeatMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mdfs.message.HeartbeatMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HeartbeatMessage::IsInitialized() const {

  return true;
}

void HeartbeatMessage::Swap(HeartbeatMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatMessage::InternalSwap(HeartbeatMessage* other) {
  std::swap(spaceremain_, other->spaceremain_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartbeatMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeartbeatMessage_descriptor_;
  metadata.reflection = HeartbeatMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartbeatMessage

// optional uint64 spaceRemain = 1;
void HeartbeatMessage::clear_spaceremain() {
  spaceremain_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 HeartbeatMessage::spaceremain() const {
  // @@protoc_insertion_point(field_get:mdfs.message.HeartbeatMessage.spaceRemain)
  return spaceremain_;
}
void HeartbeatMessage::set_spaceremain(::google::protobuf::uint64 value) {
  
  spaceremain_ = value;
  // @@protoc_insertion_point(field_set:mdfs.message.HeartbeatMessage.spaceRemain)
}

inline const HeartbeatMessage* HeartbeatMessage::internal_default_instance() {
  return &HeartbeatMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartbeatReturnMessage::kCommandFieldNumber;
const int HeartbeatReturnMessage::kBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatReturnMessage::HeartbeatReturnMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:mdfs.message.HeartbeatReturnMessage)
}

void HeartbeatReturnMessage::InitAsDefaultInstance() {
}

HeartbeatReturnMessage::HeartbeatReturnMessage(const HeartbeatReturnMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mdfs.message.HeartbeatReturnMessage)
}

void HeartbeatReturnMessage::SharedCtor() {
  command_ = 0;
  _cached_size_ = 0;
}

HeartbeatReturnMessage::~HeartbeatReturnMessage() {
  // @@protoc_insertion_point(destructor:mdfs.message.HeartbeatReturnMessage)
  SharedDtor();
}

void HeartbeatReturnMessage::SharedDtor() {
}

void HeartbeatReturnMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartbeatReturnMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartbeatReturnMessage_descriptor_;
}

const HeartbeatReturnMessage& HeartbeatReturnMessage::default_instance() {
  protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HeartbeatReturnMessage> HeartbeatReturnMessage_default_instance_;

HeartbeatReturnMessage* HeartbeatReturnMessage::New(::google::protobuf::Arena* arena) const {
  HeartbeatReturnMessage* n = new HeartbeatReturnMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartbeatReturnMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mdfs.message.HeartbeatReturnMessage)
  command_ = 0;
  blocks_.Clear();
}

bool HeartbeatReturnMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mdfs.message.HeartbeatReturnMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 command = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &command_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_blocks;
        break;
      }

      // repeated .mdfs.message.BlockInfo blocks = 2;
      case 2: {
        if (tag == 18) {
         parse_blocks:
          DO_(input->IncrementRecursionDepth());
         parse_loop_blocks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_blocks()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_blocks;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mdfs.message.HeartbeatReturnMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mdfs.message.HeartbeatReturnMessage)
  return false;
#undef DO_
}

void HeartbeatReturnMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mdfs.message.HeartbeatReturnMessage)
  // optional int32 command = 1;
  if (this->command() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->command(), output);
  }

  // repeated .mdfs.message.BlockInfo blocks = 2;
  for (unsigned int i = 0, n = this->blocks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->blocks(i), output);
  }

  // @@protoc_insertion_point(serialize_end:mdfs.message.HeartbeatReturnMessage)
}

::google::protobuf::uint8* HeartbeatReturnMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mdfs.message.HeartbeatReturnMessage)
  // optional int32 command = 1;
  if (this->command() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->command(), target);
  }

  // repeated .mdfs.message.BlockInfo blocks = 2;
  for (unsigned int i = 0, n = this->blocks_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->blocks(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mdfs.message.HeartbeatReturnMessage)
  return target;
}

size_t HeartbeatReturnMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mdfs.message.HeartbeatReturnMessage)
  size_t total_size = 0;

  // optional int32 command = 1;
  if (this->command() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->command());
  }

  // repeated .mdfs.message.BlockInfo blocks = 2;
  {
    unsigned int count = this->blocks_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->blocks(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartbeatReturnMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mdfs.message.HeartbeatReturnMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HeartbeatReturnMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatReturnMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mdfs.message.HeartbeatReturnMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mdfs.message.HeartbeatReturnMessage)
    UnsafeMergeFrom(*source);
  }
}

void HeartbeatReturnMessage::MergeFrom(const HeartbeatReturnMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mdfs.message.HeartbeatReturnMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HeartbeatReturnMessage::UnsafeMergeFrom(const HeartbeatReturnMessage& from) {
  GOOGLE_DCHECK(&from != this);
  blocks_.MergeFrom(from.blocks_);
  if (from.command() != 0) {
    set_command(from.command());
  }
}

void HeartbeatReturnMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mdfs.message.HeartbeatReturnMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatReturnMessage::CopyFrom(const HeartbeatReturnMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mdfs.message.HeartbeatReturnMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HeartbeatReturnMessage::IsInitialized() const {

  return true;
}

void HeartbeatReturnMessage::Swap(HeartbeatReturnMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatReturnMessage::InternalSwap(HeartbeatReturnMessage* other) {
  std::swap(command_, other->command_);
  blocks_.UnsafeArenaSwap(&other->blocks_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartbeatReturnMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeartbeatReturnMessage_descriptor_;
  metadata.reflection = HeartbeatReturnMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartbeatReturnMessage

// optional int32 command = 1;
void HeartbeatReturnMessage::clear_command() {
  command_ = 0;
}
::google::protobuf::int32 HeartbeatReturnMessage::command() const {
  // @@protoc_insertion_point(field_get:mdfs.message.HeartbeatReturnMessage.command)
  return command_;
}
void HeartbeatReturnMessage::set_command(::google::protobuf::int32 value) {
  
  command_ = value;
  // @@protoc_insertion_point(field_set:mdfs.message.HeartbeatReturnMessage.command)
}

// repeated .mdfs.message.BlockInfo blocks = 2;
int HeartbeatReturnMessage::blocks_size() const {
  return blocks_.size();
}
void HeartbeatReturnMessage::clear_blocks() {
  blocks_.Clear();
}
const ::mdfs::message::BlockInfo& HeartbeatReturnMessage::blocks(int index) const {
  // @@protoc_insertion_point(field_get:mdfs.message.HeartbeatReturnMessage.blocks)
  return blocks_.Get(index);
}
::mdfs::message::BlockInfo* HeartbeatReturnMessage::mutable_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:mdfs.message.HeartbeatReturnMessage.blocks)
  return blocks_.Mutable(index);
}
::mdfs::message::BlockInfo* HeartbeatReturnMessage::add_blocks() {
  // @@protoc_insertion_point(field_add:mdfs.message.HeartbeatReturnMessage.blocks)
  return blocks_.Add();
}
::google::protobuf::RepeatedPtrField< ::mdfs::message::BlockInfo >*
HeartbeatReturnMessage::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:mdfs.message.HeartbeatReturnMessage.blocks)
  return &blocks_;
}
const ::google::protobuf::RepeatedPtrField< ::mdfs::message::BlockInfo >&
HeartbeatReturnMessage::blocks() const {
  // @@protoc_insertion_point(field_list:mdfs.message.HeartbeatReturnMessage.blocks)
  return blocks_;
}

inline const HeartbeatReturnMessage* HeartbeatReturnMessage::internal_default_instance() {
  return &HeartbeatReturnMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportBlockMessage::kStatusFieldNumber;
const int ReportBlockMessage::kBlockinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportBlockMessage::ReportBlockMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:mdfs.message.ReportBlockMessage)
}

void ReportBlockMessage::InitAsDefaultInstance() {
  blockinfo_ = const_cast< ::mdfs::message::BlockInfo*>(
      ::mdfs::message::BlockInfo::internal_default_instance());
}

ReportBlockMessage::ReportBlockMessage(const ReportBlockMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mdfs.message.ReportBlockMessage)
}

void ReportBlockMessage::SharedCtor() {
  blockinfo_ = NULL;
  status_ = 0;
  _cached_size_ = 0;
}

ReportBlockMessage::~ReportBlockMessage() {
  // @@protoc_insertion_point(destructor:mdfs.message.ReportBlockMessage)
  SharedDtor();
}

void ReportBlockMessage::SharedDtor() {
  if (this != &ReportBlockMessage_default_instance_.get()) {
    delete blockinfo_;
  }
}

void ReportBlockMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportBlockMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReportBlockMessage_descriptor_;
}

const ReportBlockMessage& ReportBlockMessage::default_instance() {
  protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReportBlockMessage> ReportBlockMessage_default_instance_;

ReportBlockMessage* ReportBlockMessage::New(::google::protobuf::Arena* arena) const {
  ReportBlockMessage* n = new ReportBlockMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReportBlockMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mdfs.message.ReportBlockMessage)
  status_ = 0;
  if (GetArenaNoVirtual() == NULL && blockinfo_ != NULL) delete blockinfo_;
  blockinfo_ = NULL;
}

bool ReportBlockMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mdfs.message.ReportBlockMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_blockinfo;
        break;
      }

      // optional .mdfs.message.BlockInfo blockinfo = 2;
      case 2: {
        if (tag == 18) {
         parse_blockinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_blockinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mdfs.message.ReportBlockMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mdfs.message.ReportBlockMessage)
  return false;
#undef DO_
}

void ReportBlockMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mdfs.message.ReportBlockMessage)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // optional .mdfs.message.BlockInfo blockinfo = 2;
  if (this->has_blockinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->blockinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:mdfs.message.ReportBlockMessage)
}

::google::protobuf::uint8* ReportBlockMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mdfs.message.ReportBlockMessage)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // optional .mdfs.message.BlockInfo blockinfo = 2;
  if (this->has_blockinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->blockinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mdfs.message.ReportBlockMessage)
  return target;
}

size_t ReportBlockMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mdfs.message.ReportBlockMessage)
  size_t total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // optional .mdfs.message.BlockInfo blockinfo = 2;
  if (this->has_blockinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->blockinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReportBlockMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mdfs.message.ReportBlockMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReportBlockMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportBlockMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mdfs.message.ReportBlockMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mdfs.message.ReportBlockMessage)
    UnsafeMergeFrom(*source);
  }
}

void ReportBlockMessage::MergeFrom(const ReportBlockMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mdfs.message.ReportBlockMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReportBlockMessage::UnsafeMergeFrom(const ReportBlockMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.has_blockinfo()) {
    mutable_blockinfo()->::mdfs::message::BlockInfo::MergeFrom(from.blockinfo());
  }
}

void ReportBlockMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mdfs.message.ReportBlockMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportBlockMessage::CopyFrom(const ReportBlockMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mdfs.message.ReportBlockMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReportBlockMessage::IsInitialized() const {

  return true;
}

void ReportBlockMessage::Swap(ReportBlockMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportBlockMessage::InternalSwap(ReportBlockMessage* other) {
  std::swap(status_, other->status_);
  std::swap(blockinfo_, other->blockinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReportBlockMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReportBlockMessage_descriptor_;
  metadata.reflection = ReportBlockMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReportBlockMessage

// optional int32 status = 1;
void ReportBlockMessage::clear_status() {
  status_ = 0;
}
::google::protobuf::int32 ReportBlockMessage::status() const {
  // @@protoc_insertion_point(field_get:mdfs.message.ReportBlockMessage.status)
  return status_;
}
void ReportBlockMessage::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:mdfs.message.ReportBlockMessage.status)
}

// optional .mdfs.message.BlockInfo blockinfo = 2;
bool ReportBlockMessage::has_blockinfo() const {
  return this != internal_default_instance() && blockinfo_ != NULL;
}
void ReportBlockMessage::clear_blockinfo() {
  if (GetArenaNoVirtual() == NULL && blockinfo_ != NULL) delete blockinfo_;
  blockinfo_ = NULL;
}
const ::mdfs::message::BlockInfo& ReportBlockMessage::blockinfo() const {
  // @@protoc_insertion_point(field_get:mdfs.message.ReportBlockMessage.blockinfo)
  return blockinfo_ != NULL ? *blockinfo_
                         : *::mdfs::message::BlockInfo::internal_default_instance();
}
::mdfs::message::BlockInfo* ReportBlockMessage::mutable_blockinfo() {
  
  if (blockinfo_ == NULL) {
    blockinfo_ = new ::mdfs::message::BlockInfo;
  }
  // @@protoc_insertion_point(field_mutable:mdfs.message.ReportBlockMessage.blockinfo)
  return blockinfo_;
}
::mdfs::message::BlockInfo* ReportBlockMessage::release_blockinfo() {
  // @@protoc_insertion_point(field_release:mdfs.message.ReportBlockMessage.blockinfo)
  
  ::mdfs::message::BlockInfo* temp = blockinfo_;
  blockinfo_ = NULL;
  return temp;
}
void ReportBlockMessage::set_allocated_blockinfo(::mdfs::message::BlockInfo* blockinfo) {
  delete blockinfo_;
  blockinfo_ = blockinfo;
  if (blockinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mdfs.message.ReportBlockMessage.blockinfo)
}

inline const ReportBlockMessage* ReportBlockMessage::internal_default_instance() {
  return &ReportBlockMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportBlockReturnMessage::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportBlockReturnMessage::ReportBlockReturnMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:mdfs.message.ReportBlockReturnMessage)
}

void ReportBlockReturnMessage::InitAsDefaultInstance() {
}

ReportBlockReturnMessage::ReportBlockReturnMessage(const ReportBlockReturnMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mdfs.message.ReportBlockReturnMessage)
}

void ReportBlockReturnMessage::SharedCtor() {
  status_ = 0;
  _cached_size_ = 0;
}

ReportBlockReturnMessage::~ReportBlockReturnMessage() {
  // @@protoc_insertion_point(destructor:mdfs.message.ReportBlockReturnMessage)
  SharedDtor();
}

void ReportBlockReturnMessage::SharedDtor() {
}

void ReportBlockReturnMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportBlockReturnMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReportBlockReturnMessage_descriptor_;
}

const ReportBlockReturnMessage& ReportBlockReturnMessage::default_instance() {
  protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReportBlockReturnMessage> ReportBlockReturnMessage_default_instance_;

ReportBlockReturnMessage* ReportBlockReturnMessage::New(::google::protobuf::Arena* arena) const {
  ReportBlockReturnMessage* n = new ReportBlockReturnMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReportBlockReturnMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mdfs.message.ReportBlockReturnMessage)
  status_ = 0;
}

bool ReportBlockReturnMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mdfs.message.ReportBlockReturnMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mdfs.message.ReportBlockReturnMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mdfs.message.ReportBlockReturnMessage)
  return false;
#undef DO_
}

void ReportBlockReturnMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mdfs.message.ReportBlockReturnMessage)
  // optional int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:mdfs.message.ReportBlockReturnMessage)
}

::google::protobuf::uint8* ReportBlockReturnMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mdfs.message.ReportBlockReturnMessage)
  // optional int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mdfs.message.ReportBlockReturnMessage)
  return target;
}

size_t ReportBlockReturnMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mdfs.message.ReportBlockReturnMessage)
  size_t total_size = 0;

  // optional int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReportBlockReturnMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mdfs.message.ReportBlockReturnMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReportBlockReturnMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportBlockReturnMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mdfs.message.ReportBlockReturnMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mdfs.message.ReportBlockReturnMessage)
    UnsafeMergeFrom(*source);
  }
}

void ReportBlockReturnMessage::MergeFrom(const ReportBlockReturnMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mdfs.message.ReportBlockReturnMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReportBlockReturnMessage::UnsafeMergeFrom(const ReportBlockReturnMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void ReportBlockReturnMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mdfs.message.ReportBlockReturnMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportBlockReturnMessage::CopyFrom(const ReportBlockReturnMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mdfs.message.ReportBlockReturnMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReportBlockReturnMessage::IsInitialized() const {

  return true;
}

void ReportBlockReturnMessage::Swap(ReportBlockReturnMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportBlockReturnMessage::InternalSwap(ReportBlockReturnMessage* other) {
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReportBlockReturnMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReportBlockReturnMessage_descriptor_;
  metadata.reflection = ReportBlockReturnMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReportBlockReturnMessage

// optional int32 status = 1;
void ReportBlockReturnMessage::clear_status() {
  status_ = 0;
}
::google::protobuf::int32 ReportBlockReturnMessage::status() const {
  // @@protoc_insertion_point(field_get:mdfs.message.ReportBlockReturnMessage.status)
  return status_;
}
void ReportBlockReturnMessage::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:mdfs.message.ReportBlockReturnMessage.status)
}

inline const ReportBlockReturnMessage* ReportBlockReturnMessage::internal_default_instance() {
  return &ReportBlockReturnMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace mdfs

// @@protoc_insertion_point(global_scope)
