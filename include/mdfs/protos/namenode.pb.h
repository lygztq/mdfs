// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mdfs/protos/namenode.proto

#ifndef PROTOBUF_mdfs_2fprotos_2fnamenode_2eproto__INCLUDED
#define PROTOBUF_mdfs_2fprotos_2fnamenode_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "mdfs/protos/block_info.pb.h"
// @@protoc_insertion_point(includes)

namespace mdfs {
namespace message {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_mdfs_2fprotos_2fnamenode_2eproto();
void protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto();
void protobuf_AssignDesc_mdfs_2fprotos_2fnamenode_2eproto();
void protobuf_ShutdownFile_mdfs_2fprotos_2fnamenode_2eproto();

class ClientCommandMessage;
class ClientCommandReturnMessage;
class HeartbeatMessage;
class HeartbeatReturnMessage;
class ReportBlockMessage;
class ReportBlockReturnMessage;

// ===================================================================

class ClientCommandMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mdfs.message.ClientCommandMessage) */ {
 public:
  ClientCommandMessage();
  virtual ~ClientCommandMessage();

  ClientCommandMessage(const ClientCommandMessage& from);

  inline ClientCommandMessage& operator=(const ClientCommandMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientCommandMessage& default_instance();

  static const ClientCommandMessage* internal_default_instance();

  void Swap(ClientCommandMessage* other);

  // implements Message ----------------------------------------------

  inline ClientCommandMessage* New() const { return New(NULL); }

  ClientCommandMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientCommandMessage& from);
  void MergeFrom(const ClientCommandMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientCommandMessage* other);
  void UnsafeMergeFrom(const ClientCommandMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 command = 1;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  ::google::protobuf::int32 command() const;
  void set_command(::google::protobuf::int32 value);

  // optional string address = 2;
  void clear_address();
  static const int kAddressFieldNumber = 2;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // optional string des_address = 3;
  void clear_des_address();
  static const int kDesAddressFieldNumber = 3;
  const ::std::string& des_address() const;
  void set_des_address(const ::std::string& value);
  void set_des_address(const char* value);
  void set_des_address(const char* value, size_t size);
  ::std::string* mutable_des_address();
  ::std::string* release_des_address();
  void set_allocated_des_address(::std::string* des_address);

  // @@protoc_insertion_point(class_scope:mdfs.message.ClientCommandMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::internal::ArenaStringPtr des_address_;
  ::google::protobuf::int32 command_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto_impl();
  friend void  protobuf_AddDesc_mdfs_2fprotos_2fnamenode_2eproto_impl();
  friend void protobuf_AssignDesc_mdfs_2fprotos_2fnamenode_2eproto();
  friend void protobuf_ShutdownFile_mdfs_2fprotos_2fnamenode_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClientCommandMessage> ClientCommandMessage_default_instance_;

// -------------------------------------------------------------------

class ClientCommandReturnMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mdfs.message.ClientCommandReturnMessage) */ {
 public:
  ClientCommandReturnMessage();
  virtual ~ClientCommandReturnMessage();

  ClientCommandReturnMessage(const ClientCommandReturnMessage& from);

  inline ClientCommandReturnMessage& operator=(const ClientCommandReturnMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientCommandReturnMessage& default_instance();

  static const ClientCommandReturnMessage* internal_default_instance();

  void Swap(ClientCommandReturnMessage* other);

  // implements Message ----------------------------------------------

  inline ClientCommandReturnMessage* New() const { return New(NULL); }

  ClientCommandReturnMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientCommandReturnMessage& from);
  void MergeFrom(const ClientCommandReturnMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientCommandReturnMessage* other);
  void UnsafeMergeFrom(const ClientCommandReturnMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // repeated .mdfs.message.BlockInfo blockinfo = 2;
  int blockinfo_size() const;
  void clear_blockinfo();
  static const int kBlockinfoFieldNumber = 2;
  const ::mdfs::message::BlockInfo& blockinfo(int index) const;
  ::mdfs::message::BlockInfo* mutable_blockinfo(int index);
  ::mdfs::message::BlockInfo* add_blockinfo();
  ::google::protobuf::RepeatedPtrField< ::mdfs::message::BlockInfo >*
      mutable_blockinfo();
  const ::google::protobuf::RepeatedPtrField< ::mdfs::message::BlockInfo >&
      blockinfo() const;

  // @@protoc_insertion_point(class_scope:mdfs.message.ClientCommandReturnMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mdfs::message::BlockInfo > blockinfo_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto_impl();
  friend void  protobuf_AddDesc_mdfs_2fprotos_2fnamenode_2eproto_impl();
  friend void protobuf_AssignDesc_mdfs_2fprotos_2fnamenode_2eproto();
  friend void protobuf_ShutdownFile_mdfs_2fprotos_2fnamenode_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClientCommandReturnMessage> ClientCommandReturnMessage_default_instance_;

// -------------------------------------------------------------------

class HeartbeatMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mdfs.message.HeartbeatMessage) */ {
 public:
  HeartbeatMessage();
  virtual ~HeartbeatMessage();

  HeartbeatMessage(const HeartbeatMessage& from);

  inline HeartbeatMessage& operator=(const HeartbeatMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatMessage& default_instance();

  static const HeartbeatMessage* internal_default_instance();

  void Swap(HeartbeatMessage* other);

  // implements Message ----------------------------------------------

  inline HeartbeatMessage* New() const { return New(NULL); }

  HeartbeatMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartbeatMessage& from);
  void MergeFrom(const HeartbeatMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeartbeatMessage* other);
  void UnsafeMergeFrom(const HeartbeatMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 spaceRemain = 1;
  void clear_spaceremain();
  static const int kSpaceRemainFieldNumber = 1;
  ::google::protobuf::uint64 spaceremain() const;
  void set_spaceremain(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:mdfs.message.HeartbeatMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 spaceremain_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto_impl();
  friend void  protobuf_AddDesc_mdfs_2fprotos_2fnamenode_2eproto_impl();
  friend void protobuf_AssignDesc_mdfs_2fprotos_2fnamenode_2eproto();
  friend void protobuf_ShutdownFile_mdfs_2fprotos_2fnamenode_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatMessage> HeartbeatMessage_default_instance_;

// -------------------------------------------------------------------

class HeartbeatReturnMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mdfs.message.HeartbeatReturnMessage) */ {
 public:
  HeartbeatReturnMessage();
  virtual ~HeartbeatReturnMessage();

  HeartbeatReturnMessage(const HeartbeatReturnMessage& from);

  inline HeartbeatReturnMessage& operator=(const HeartbeatReturnMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatReturnMessage& default_instance();

  static const HeartbeatReturnMessage* internal_default_instance();

  void Swap(HeartbeatReturnMessage* other);

  // implements Message ----------------------------------------------

  inline HeartbeatReturnMessage* New() const { return New(NULL); }

  HeartbeatReturnMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartbeatReturnMessage& from);
  void MergeFrom(const HeartbeatReturnMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeartbeatReturnMessage* other);
  void UnsafeMergeFrom(const HeartbeatReturnMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 command = 1;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  ::google::protobuf::int32 command() const;
  void set_command(::google::protobuf::int32 value);

  // repeated .mdfs.message.BlockInfo blocks = 2;
  int blocks_size() const;
  void clear_blocks();
  static const int kBlocksFieldNumber = 2;
  const ::mdfs::message::BlockInfo& blocks(int index) const;
  ::mdfs::message::BlockInfo* mutable_blocks(int index);
  ::mdfs::message::BlockInfo* add_blocks();
  ::google::protobuf::RepeatedPtrField< ::mdfs::message::BlockInfo >*
      mutable_blocks();
  const ::google::protobuf::RepeatedPtrField< ::mdfs::message::BlockInfo >&
      blocks() const;

  // @@protoc_insertion_point(class_scope:mdfs.message.HeartbeatReturnMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mdfs::message::BlockInfo > blocks_;
  ::google::protobuf::int32 command_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto_impl();
  friend void  protobuf_AddDesc_mdfs_2fprotos_2fnamenode_2eproto_impl();
  friend void protobuf_AssignDesc_mdfs_2fprotos_2fnamenode_2eproto();
  friend void protobuf_ShutdownFile_mdfs_2fprotos_2fnamenode_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatReturnMessage> HeartbeatReturnMessage_default_instance_;

// -------------------------------------------------------------------

class ReportBlockMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mdfs.message.ReportBlockMessage) */ {
 public:
  ReportBlockMessage();
  virtual ~ReportBlockMessage();

  ReportBlockMessage(const ReportBlockMessage& from);

  inline ReportBlockMessage& operator=(const ReportBlockMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportBlockMessage& default_instance();

  static const ReportBlockMessage* internal_default_instance();

  void Swap(ReportBlockMessage* other);

  // implements Message ----------------------------------------------

  inline ReportBlockMessage* New() const { return New(NULL); }

  ReportBlockMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportBlockMessage& from);
  void MergeFrom(const ReportBlockMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReportBlockMessage* other);
  void UnsafeMergeFrom(const ReportBlockMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional .mdfs.message.BlockInfo blockinfo = 2;
  bool has_blockinfo() const;
  void clear_blockinfo();
  static const int kBlockinfoFieldNumber = 2;
  const ::mdfs::message::BlockInfo& blockinfo() const;
  ::mdfs::message::BlockInfo* mutable_blockinfo();
  ::mdfs::message::BlockInfo* release_blockinfo();
  void set_allocated_blockinfo(::mdfs::message::BlockInfo* blockinfo);

  // @@protoc_insertion_point(class_scope:mdfs.message.ReportBlockMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mdfs::message::BlockInfo* blockinfo_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto_impl();
  friend void  protobuf_AddDesc_mdfs_2fprotos_2fnamenode_2eproto_impl();
  friend void protobuf_AssignDesc_mdfs_2fprotos_2fnamenode_2eproto();
  friend void protobuf_ShutdownFile_mdfs_2fprotos_2fnamenode_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReportBlockMessage> ReportBlockMessage_default_instance_;

// -------------------------------------------------------------------

class ReportBlockReturnMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mdfs.message.ReportBlockReturnMessage) */ {
 public:
  ReportBlockReturnMessage();
  virtual ~ReportBlockReturnMessage();

  ReportBlockReturnMessage(const ReportBlockReturnMessage& from);

  inline ReportBlockReturnMessage& operator=(const ReportBlockReturnMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportBlockReturnMessage& default_instance();

  static const ReportBlockReturnMessage* internal_default_instance();

  void Swap(ReportBlockReturnMessage* other);

  // implements Message ----------------------------------------------

  inline ReportBlockReturnMessage* New() const { return New(NULL); }

  ReportBlockReturnMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportBlockReturnMessage& from);
  void MergeFrom(const ReportBlockReturnMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReportBlockReturnMessage* other);
  void UnsafeMergeFrom(const ReportBlockReturnMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mdfs.message.ReportBlockReturnMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_mdfs_2fprotos_2fnamenode_2eproto_impl();
  friend void  protobuf_AddDesc_mdfs_2fprotos_2fnamenode_2eproto_impl();
  friend void protobuf_AssignDesc_mdfs_2fprotos_2fnamenode_2eproto();
  friend void protobuf_ShutdownFile_mdfs_2fprotos_2fnamenode_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReportBlockReturnMessage> ReportBlockReturnMessage_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientCommandMessage

// optional int32 command = 1;
inline void ClientCommandMessage::clear_command() {
  command_ = 0;
}
inline ::google::protobuf::int32 ClientCommandMessage::command() const {
  // @@protoc_insertion_point(field_get:mdfs.message.ClientCommandMessage.command)
  return command_;
}
inline void ClientCommandMessage::set_command(::google::protobuf::int32 value) {
  
  command_ = value;
  // @@protoc_insertion_point(field_set:mdfs.message.ClientCommandMessage.command)
}

// optional string address = 2;
inline void ClientCommandMessage::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientCommandMessage::address() const {
  // @@protoc_insertion_point(field_get:mdfs.message.ClientCommandMessage.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientCommandMessage::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mdfs.message.ClientCommandMessage.address)
}
inline void ClientCommandMessage::set_address(const char* value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mdfs.message.ClientCommandMessage.address)
}
inline void ClientCommandMessage::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mdfs.message.ClientCommandMessage.address)
}
inline ::std::string* ClientCommandMessage::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:mdfs.message.ClientCommandMessage.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientCommandMessage::release_address() {
  // @@protoc_insertion_point(field_release:mdfs.message.ClientCommandMessage.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientCommandMessage::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:mdfs.message.ClientCommandMessage.address)
}

// optional string des_address = 3;
inline void ClientCommandMessage::clear_des_address() {
  des_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientCommandMessage::des_address() const {
  // @@protoc_insertion_point(field_get:mdfs.message.ClientCommandMessage.des_address)
  return des_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientCommandMessage::set_des_address(const ::std::string& value) {
  
  des_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mdfs.message.ClientCommandMessage.des_address)
}
inline void ClientCommandMessage::set_des_address(const char* value) {
  
  des_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mdfs.message.ClientCommandMessage.des_address)
}
inline void ClientCommandMessage::set_des_address(const char* value, size_t size) {
  
  des_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mdfs.message.ClientCommandMessage.des_address)
}
inline ::std::string* ClientCommandMessage::mutable_des_address() {
  
  // @@protoc_insertion_point(field_mutable:mdfs.message.ClientCommandMessage.des_address)
  return des_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientCommandMessage::release_des_address() {
  // @@protoc_insertion_point(field_release:mdfs.message.ClientCommandMessage.des_address)
  
  return des_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientCommandMessage::set_allocated_des_address(::std::string* des_address) {
  if (des_address != NULL) {
    
  } else {
    
  }
  des_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), des_address);
  // @@protoc_insertion_point(field_set_allocated:mdfs.message.ClientCommandMessage.des_address)
}

inline const ClientCommandMessage* ClientCommandMessage::internal_default_instance() {
  return &ClientCommandMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// ClientCommandReturnMessage

// optional int32 status = 1;
inline void ClientCommandReturnMessage::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 ClientCommandReturnMessage::status() const {
  // @@protoc_insertion_point(field_get:mdfs.message.ClientCommandReturnMessage.status)
  return status_;
}
inline void ClientCommandReturnMessage::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:mdfs.message.ClientCommandReturnMessage.status)
}

// repeated .mdfs.message.BlockInfo blockinfo = 2;
inline int ClientCommandReturnMessage::blockinfo_size() const {
  return blockinfo_.size();
}
inline void ClientCommandReturnMessage::clear_blockinfo() {
  blockinfo_.Clear();
}
inline const ::mdfs::message::BlockInfo& ClientCommandReturnMessage::blockinfo(int index) const {
  // @@protoc_insertion_point(field_get:mdfs.message.ClientCommandReturnMessage.blockinfo)
  return blockinfo_.Get(index);
}
inline ::mdfs::message::BlockInfo* ClientCommandReturnMessage::mutable_blockinfo(int index) {
  // @@protoc_insertion_point(field_mutable:mdfs.message.ClientCommandReturnMessage.blockinfo)
  return blockinfo_.Mutable(index);
}
inline ::mdfs::message::BlockInfo* ClientCommandReturnMessage::add_blockinfo() {
  // @@protoc_insertion_point(field_add:mdfs.message.ClientCommandReturnMessage.blockinfo)
  return blockinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mdfs::message::BlockInfo >*
ClientCommandReturnMessage::mutable_blockinfo() {
  // @@protoc_insertion_point(field_mutable_list:mdfs.message.ClientCommandReturnMessage.blockinfo)
  return &blockinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mdfs::message::BlockInfo >&
ClientCommandReturnMessage::blockinfo() const {
  // @@protoc_insertion_point(field_list:mdfs.message.ClientCommandReturnMessage.blockinfo)
  return blockinfo_;
}

inline const ClientCommandReturnMessage* ClientCommandReturnMessage::internal_default_instance() {
  return &ClientCommandReturnMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// HeartbeatMessage

// optional uint64 spaceRemain = 1;
inline void HeartbeatMessage::clear_spaceremain() {
  spaceremain_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HeartbeatMessage::spaceremain() const {
  // @@protoc_insertion_point(field_get:mdfs.message.HeartbeatMessage.spaceRemain)
  return spaceremain_;
}
inline void HeartbeatMessage::set_spaceremain(::google::protobuf::uint64 value) {
  
  spaceremain_ = value;
  // @@protoc_insertion_point(field_set:mdfs.message.HeartbeatMessage.spaceRemain)
}

inline const HeartbeatMessage* HeartbeatMessage::internal_default_instance() {
  return &HeartbeatMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// HeartbeatReturnMessage

// optional int32 command = 1;
inline void HeartbeatReturnMessage::clear_command() {
  command_ = 0;
}
inline ::google::protobuf::int32 HeartbeatReturnMessage::command() const {
  // @@protoc_insertion_point(field_get:mdfs.message.HeartbeatReturnMessage.command)
  return command_;
}
inline void HeartbeatReturnMessage::set_command(::google::protobuf::int32 value) {
  
  command_ = value;
  // @@protoc_insertion_point(field_set:mdfs.message.HeartbeatReturnMessage.command)
}

// repeated .mdfs.message.BlockInfo blocks = 2;
inline int HeartbeatReturnMessage::blocks_size() const {
  return blocks_.size();
}
inline void HeartbeatReturnMessage::clear_blocks() {
  blocks_.Clear();
}
inline const ::mdfs::message::BlockInfo& HeartbeatReturnMessage::blocks(int index) const {
  // @@protoc_insertion_point(field_get:mdfs.message.HeartbeatReturnMessage.blocks)
  return blocks_.Get(index);
}
inline ::mdfs::message::BlockInfo* HeartbeatReturnMessage::mutable_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:mdfs.message.HeartbeatReturnMessage.blocks)
  return blocks_.Mutable(index);
}
inline ::mdfs::message::BlockInfo* HeartbeatReturnMessage::add_blocks() {
  // @@protoc_insertion_point(field_add:mdfs.message.HeartbeatReturnMessage.blocks)
  return blocks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mdfs::message::BlockInfo >*
HeartbeatReturnMessage::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:mdfs.message.HeartbeatReturnMessage.blocks)
  return &blocks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mdfs::message::BlockInfo >&
HeartbeatReturnMessage::blocks() const {
  // @@protoc_insertion_point(field_list:mdfs.message.HeartbeatReturnMessage.blocks)
  return blocks_;
}

inline const HeartbeatReturnMessage* HeartbeatReturnMessage::internal_default_instance() {
  return &HeartbeatReturnMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// ReportBlockMessage

// optional int32 status = 1;
inline void ReportBlockMessage::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 ReportBlockMessage::status() const {
  // @@protoc_insertion_point(field_get:mdfs.message.ReportBlockMessage.status)
  return status_;
}
inline void ReportBlockMessage::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:mdfs.message.ReportBlockMessage.status)
}

// optional .mdfs.message.BlockInfo blockinfo = 2;
inline bool ReportBlockMessage::has_blockinfo() const {
  return this != internal_default_instance() && blockinfo_ != NULL;
}
inline void ReportBlockMessage::clear_blockinfo() {
  if (GetArenaNoVirtual() == NULL && blockinfo_ != NULL) delete blockinfo_;
  blockinfo_ = NULL;
}
inline const ::mdfs::message::BlockInfo& ReportBlockMessage::blockinfo() const {
  // @@protoc_insertion_point(field_get:mdfs.message.ReportBlockMessage.blockinfo)
  return blockinfo_ != NULL ? *blockinfo_
                         : *::mdfs::message::BlockInfo::internal_default_instance();
}
inline ::mdfs::message::BlockInfo* ReportBlockMessage::mutable_blockinfo() {
  
  if (blockinfo_ == NULL) {
    blockinfo_ = new ::mdfs::message::BlockInfo;
  }
  // @@protoc_insertion_point(field_mutable:mdfs.message.ReportBlockMessage.blockinfo)
  return blockinfo_;
}
inline ::mdfs::message::BlockInfo* ReportBlockMessage::release_blockinfo() {
  // @@protoc_insertion_point(field_release:mdfs.message.ReportBlockMessage.blockinfo)
  
  ::mdfs::message::BlockInfo* temp = blockinfo_;
  blockinfo_ = NULL;
  return temp;
}
inline void ReportBlockMessage::set_allocated_blockinfo(::mdfs::message::BlockInfo* blockinfo) {
  delete blockinfo_;
  blockinfo_ = blockinfo;
  if (blockinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mdfs.message.ReportBlockMessage.blockinfo)
}

inline const ReportBlockMessage* ReportBlockMessage::internal_default_instance() {
  return &ReportBlockMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// ReportBlockReturnMessage

// optional int32 status = 1;
inline void ReportBlockReturnMessage::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 ReportBlockReturnMessage::status() const {
  // @@protoc_insertion_point(field_get:mdfs.message.ReportBlockReturnMessage.status)
  return status_;
}
inline void ReportBlockReturnMessage::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:mdfs.message.ReportBlockReturnMessage.status)
}

inline const ReportBlockReturnMessage* ReportBlockReturnMessage::internal_default_instance() {
  return &ReportBlockReturnMessage_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace mdfs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mdfs_2fprotos_2fnamenode_2eproto__INCLUDED
